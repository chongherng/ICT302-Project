<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/script/script.js"></script>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@600;700&display=swap" rel="stylesheet">
    <title>Student Request Portal</title>
</head>
<body>
  <div class="flex-container">
    <div class="left-content">
      <!--Background logo inserted through css-->
    </div>
    <div class="right-content">
      <div>
        <h1 class="landing-title">Murdoch University</h1>
        <h2 class="landing-sub-title">Student Request Portal</h2>
      </div>
      <% if(typeof(message) != "undefined") { %>
        <% if(message) { %>
          <div><%= message %></div>
        <% }%>
      <% }%>
      <div class="support-staff-container">
        <form action="/request/student/submit" id="Student_Support_Staff_Request_Form" method="POST" enctype="multipart/form-data" onsubmit="return valdidatecheck()">
            <label class="StudentID" for="StudentID"></label><br>
            <input type="text" id="StudentID" name="StudentID" placeholder="Student ID" required minlength="8" maxlength="8 "><br>
            <select class="support-staff-dropdown" name="requestType" required>
              <option value="" disabled selected >Select Request Category</option>
              <option value="Request to drop a unit">Request to drop a unit</option>
              <option value="Request for 3rd attempt">Request for 3rd attempt</option>
              <option value="Request for 4th attempt">Request for 4th attempt</option>
              <option value="Others">Others</option>
            </select>
            <br>
            <textarea class="comment" placeholder="Comments" name="comment"></textarea><br>
            <!-- our custom upload button -->
            <label class="documentlabel" for="actual-btn">Attach A Document</label>

            <!-- actual upload which is hidden -->  
            <input type="file" id="actual-btn" name="file" accept=".docx,.pdf,.doc" hidden/>

            <!-- name of file chosen -->
            <span id="file-chosen"></span>
            <p id = "errormsg" style =
            "color:red; font-size: 20px; font-weight: bold;">
        </p>
            <br>
            <input type="submit" value="Submit" onclick = "valdidatecheck()">
          </form>
        </div>
    </div>
  </div>    
</body>
<script>
    
        var down = document.getElementById('errormsg');
        var file = document.getElementById("actual-btn");
              
        function valdidatecheck() {
            if(file.files.length == 0 ){
                down.innerHTML = "No files selected";
                return false;
            } else {
                       }
                      

            var fileInput = 
                document.getElementById('actual-btn');
              
            var filePath = fileInput.value;
          
            // Allowing file type
            var allowedExtensions = 
/(\.doc|\.docx|\.pdf|\.txt)$/i;
              
            if (!allowedExtensions.exec(filePath)) {
              down.innerHTML = "Invalid file extension selected";
                return false;
            } 
        }
      

  var x, i, j, l, ll, selElmnt, a, b, c;
  /*look for any elements with the class "custom-select":*/
  x = document.getElementsByClassName("custom-select");
  l = x.length;
  for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /*for each element, create a new DIV that will act as the selected item:*/
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /*for each element, create a new DIV that will contain the option list:*/
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
      /*for each option in the original select element,
      create a new DIV that will act as an option item:*/
      c = document.createElement("DIV");
      c.innerHTML = selElmnt.options[j].innerHTML;
      c.addEventListener("click", function(e) {
          /*when an item is clicked, update the original select box,
          and the selected item:*/
          var y, i, k, s, h, sl, yl;
          s = this.parentNode.parentNode.getElementsByTagName("select")[0];
          sl = s.length;
          h = this.parentNode.previousSibling;
          for (i = 0; i < sl; i++) {
            if (s.options[i].innerHTML == this.innerHTML) {
              s.selectedIndex = i;
              h.innerHTML = this.innerHTML;
              y = this.parentNode.getElementsByClassName("same-as-selected");
              yl = y.length;
              for (k = 0; k < yl; k++) {
                y[k].removeAttribute("class");
              }
              this.setAttribute("class", "same-as-selected");
              break;
            }
          }
          h.click();
      });
      b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function(e) {
        /*when the select box is clicked, close any other select boxes,
        and open/close the current select box:*/
        e.stopPropagation();
        closeAllSelect(this);
        this.nextSibling.classList.toggle("select-hide");
        this.classList.toggle("select-arrow-active");
      });
  }
  function closeAllSelect(elmnt) {
    /*a function that will close all select boxes in the document,
    except the current select box:*/
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
      if (elmnt == y[i]) {
        arrNo.push(i)
      } else {
        y[i].classList.remove("select-arrow-active");
      }
    }
    for (i = 0; i < xl; i++) {
      if (arrNo.indexOf(i)) {
        x[i].classList.add("select-hide");
      }
    }
  }
  /*if the user clicks anywhere outside the select box,
  then close all select boxes:*/
  document.addEventListener("click", closeAllSelect);
  const actualBtn = document.getElementById('actual-btn');

const fileChosen = document.getElementById('file-chosen');

actualBtn.addEventListener('change', function(){
fileChosen.textContent = this.files[0].name
})
  </script>
</html>